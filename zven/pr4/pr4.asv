% Define 5x7 binary matrices for the letters M, W, H
M = [
    1 0 0 0 1;
    1 1 0 1 1;
    1 0 1 0 1;
    1 0 0 0 1;
    1 0 0 0 1;
    1 0 0 0 1;
    1 0 0 0 1;
];

W = [
    1 0 0 0 1;
    1 0 0 0 1;
    1 0 1 0 1;
    1 0 1 0 1;
    1 0 1 0 1;
    0 1 0 1 0;
    0 1 0 1 0;
];

H = [
    1 0 0 0 1;
    1 0 0 0 1;
    1 0 0 0 1;
    1 1 1 1 1;
    1 0 0 0 1;
    1 0 0 0 1;
    1 0 0 0 1;
];

% Flatten each matrix into a single column
M_flat = reshape(M', [], 1);
W_flat = reshape(W', [], 1);
H_flat = reshape(H', [], 1);

% Combine the letters into a single matrix
alphabet = [M_flat, W_flat, H_flat];

% Save the matrix to a CSV file
csvwrite('Alphabet.csv', alphabet);
% Load the Alphabet.csv file
alphabet = csvread('Alphabet.csv');

function plotchar(data)
    % PLOTCHAR Visualize a 35-element vector as a 5x7 binary grid
    % Input: data - A 35-element vector representing the character
    % Reshape the data to a 5x7 grid
    charMatrix = reshape(data, [5, 7]);

    % Visualize the character as an image
    imagesc(charMatrix); % Display the matrix as an image
    colormap(gray); % Use grayscale for visualization
    axis off; % Turn off the axis for better visualization
    axis equal; % Ensure square pixels
end

% Extract letters for your variant (M, W, H)
L1 = alphabet(:, 1); % Letter M
L2 = alphabet(:, 2); % Letter W
L3 = alphabet(:, 3); % Letter H

% Visualize the letters
subplot(1,3,1); plotchar(L1);
title('Letter M');
subplot(1,3,2); plotchar(L2);
title('Letter W');
subplot(1,3,3); plotchar(L3);
title('Letter H');

% Create the Hopfield network
T = [L1, L2, L3]; % Combine the letters into the target matrix
net = newhop(T);

% Test the Hopfield network with spurious inputs (add noise)
noisyL1 = L1 + randn(35,1) * 0.4; % Add noise to letter M
noisyL2 = L2 + randn(35,1) * 0.4; % Add noise to letter W

% Recognize the noisy inputs
[Y1, ~, ~] = sim(net, 1, {}, noisyL1);
[Y2, ~, ~] = sim(net, 1, {}, noisyL2);

% Visualize the recognition results
figure;
subplot(2,2,1); plotchar(noisyL1);
title('Noisy M');
subplot(2,2,2); plotchar(Y1);
title('Recognized M');
subplot(2,2,3); plotchar(noisyL2);
title('Noisy W');
subplot(2,2,4); plotchar(Y2);
title('Recognized W');

% Test with a new symbol not in the training set
Lnew = alphabet(:, 3) + randn(35,1) * 0.8; % Add noise to letter H
[Ynew, ~, ~] = sim(net, 1, {}, Lnew);

% Visualize the result
figure;
subplot(1,2,1); plotchar(Lnew);
title('Noisy H');
subplot(1,2,2); plotchar(Ynew);
title('Recognized (or not)');


